{"type":"auditAdvisory","data":{"resolution":{"id":1085062,"path":"nunjucks>chokidar>braces>snapdragon>source-map-resolve>decode-uri-component","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.2.0","paths":["nunjucks>chokidar>braces>snapdragon>source-map-resolve>decode-uri-component","nunjucks>chokidar>readdirp>micromatch>snapdragon>source-map-resolve>decode-uri-component","nunjucks>chokidar>readdirp>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","express-nunjucks>nunjucks-async-loader>chokidar>anymatch>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","express-nunjucks>nunjucks-async-loader>chokidar>readdirp>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component"]}],"metadata":null,"vulnerable_versions":"<0.2.1","module_name":"decode-uri-component","severity":"low","github_advisory_id":"GHSA-w573-4hg7-7wgq","cves":["CVE-2022-38900"],"access":"public","patched_versions":">=0.2.1","cvss":{"score":0,"vectorString":null},"updated":"2022-12-01T21:56:00.000Z","recommendation":"Upgrade to version 0.2.1 or later","cwe":["CWE-20"],"found_by":null,"deleted":null,"id":1085062,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-38900\n- https://github.com/SamVerschueren/decode-uri-component/issues/5\n- https://github.com/sindresorhus/query-string/issues/345\n- https://github.com/SamVerschueren/decode-uri-component/commit/746ca5dcb6667c5d364e782d53c542830e4c10b9\n- https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.1\n- https://github.com/advisories/GHSA-w573-4hg7-7wgq","created":"2022-11-28T15:30:24.000Z","reported_by":null,"title":"decode-uri-component vulnerable to Denial of Service (DoS)","npm_advisory_id":null,"overview":"decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.","url":"https://github.com/advisories/GHSA-w573-4hg7-7wgq"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085062,"path":"nunjucks>chokidar>readdirp>micromatch>snapdragon>source-map-resolve>decode-uri-component","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.2.0","paths":["nunjucks>chokidar>braces>snapdragon>source-map-resolve>decode-uri-component","nunjucks>chokidar>readdirp>micromatch>snapdragon>source-map-resolve>decode-uri-component","nunjucks>chokidar>readdirp>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","express-nunjucks>nunjucks-async-loader>chokidar>anymatch>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","express-nunjucks>nunjucks-async-loader>chokidar>readdirp>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component"]}],"metadata":null,"vulnerable_versions":"<0.2.1","module_name":"decode-uri-component","severity":"low","github_advisory_id":"GHSA-w573-4hg7-7wgq","cves":["CVE-2022-38900"],"access":"public","patched_versions":">=0.2.1","cvss":{"score":0,"vectorString":null},"updated":"2022-12-01T21:56:00.000Z","recommendation":"Upgrade to version 0.2.1 or later","cwe":["CWE-20"],"found_by":null,"deleted":null,"id":1085062,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-38900\n- https://github.com/SamVerschueren/decode-uri-component/issues/5\n- https://github.com/sindresorhus/query-string/issues/345\n- https://github.com/SamVerschueren/decode-uri-component/commit/746ca5dcb6667c5d364e782d53c542830e4c10b9\n- https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.1\n- https://github.com/advisories/GHSA-w573-4hg7-7wgq","created":"2022-11-28T15:30:24.000Z","reported_by":null,"title":"decode-uri-component vulnerable to Denial of Service (DoS)","npm_advisory_id":null,"overview":"decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.","url":"https://github.com/advisories/GHSA-w573-4hg7-7wgq"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085062,"path":"nunjucks>chokidar>readdirp>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.2.0","paths":["nunjucks>chokidar>braces>snapdragon>source-map-resolve>decode-uri-component","nunjucks>chokidar>readdirp>micromatch>snapdragon>source-map-resolve>decode-uri-component","nunjucks>chokidar>readdirp>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","express-nunjucks>nunjucks-async-loader>chokidar>anymatch>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","express-nunjucks>nunjucks-async-loader>chokidar>readdirp>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component"]}],"metadata":null,"vulnerable_versions":"<0.2.1","module_name":"decode-uri-component","severity":"low","github_advisory_id":"GHSA-w573-4hg7-7wgq","cves":["CVE-2022-38900"],"access":"public","patched_versions":">=0.2.1","cvss":{"score":0,"vectorString":null},"updated":"2022-12-01T21:56:00.000Z","recommendation":"Upgrade to version 0.2.1 or later","cwe":["CWE-20"],"found_by":null,"deleted":null,"id":1085062,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-38900\n- https://github.com/SamVerschueren/decode-uri-component/issues/5\n- https://github.com/sindresorhus/query-string/issues/345\n- https://github.com/SamVerschueren/decode-uri-component/commit/746ca5dcb6667c5d364e782d53c542830e4c10b9\n- https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.1\n- https://github.com/advisories/GHSA-w573-4hg7-7wgq","created":"2022-11-28T15:30:24.000Z","reported_by":null,"title":"decode-uri-component vulnerable to Denial of Service (DoS)","npm_advisory_id":null,"overview":"decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.","url":"https://github.com/advisories/GHSA-w573-4hg7-7wgq"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085139,"path":"body-parser>qs","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.9.4","paths":["body-parser>qs","@hmcts/nodejs-healthcheck>superagent>qs","supertest-session>supertest>superagent>qs"]}],"metadata":null,"vulnerable_versions":">=6.9.0 <6.9.7","module_name":"qs","severity":"high","github_advisory_id":"GHSA-hrpp-h998-j3pp","cves":["CVE-2022-24999"],"access":"public","patched_versions":">=6.9.7","cvss":{"score":7.5,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"updated":"2022-12-06T14:32:47.000Z","recommendation":"Upgrade to version 6.9.7 or later","cwe":["CWE-1321"],"found_by":null,"deleted":null,"id":1085139,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-24999\n- https://github.com/ljharb/qs/pull/428\n- https://github.com/expressjs/express/releases/tag/4.17.3\n- https://github.com/n8tz/CVE-2022-24999\n- https://github.com/advisories/GHSA-hrpp-h998-j3pp","created":"2022-11-27T00:30:50.000Z","reported_by":null,"title":"qs vulnerable to Prototype Pollution","npm_advisory_id":null,"overview":"qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).","url":"https://github.com/advisories/GHSA-hrpp-h998-j3pp"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085139,"path":"@hmcts/nodejs-healthcheck>superagent>qs","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.9.4","paths":["body-parser>qs","@hmcts/nodejs-healthcheck>superagent>qs","supertest-session>supertest>superagent>qs"]}],"metadata":null,"vulnerable_versions":">=6.9.0 <6.9.7","module_name":"qs","severity":"high","github_advisory_id":"GHSA-hrpp-h998-j3pp","cves":["CVE-2022-24999"],"access":"public","patched_versions":">=6.9.7","cvss":{"score":7.5,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"updated":"2022-12-06T14:32:47.000Z","recommendation":"Upgrade to version 6.9.7 or later","cwe":["CWE-1321"],"found_by":null,"deleted":null,"id":1085139,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-24999\n- https://github.com/ljharb/qs/pull/428\n- https://github.com/expressjs/express/releases/tag/4.17.3\n- https://github.com/n8tz/CVE-2022-24999\n- https://github.com/advisories/GHSA-hrpp-h998-j3pp","created":"2022-11-27T00:30:50.000Z","reported_by":null,"title":"qs vulnerable to Prototype Pollution","npm_advisory_id":null,"overview":"qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).","url":"https://github.com/advisories/GHSA-hrpp-h998-j3pp"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085139,"path":"supertest-session>supertest>superagent>qs","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.9.4","paths":["body-parser>qs","@hmcts/nodejs-healthcheck>superagent>qs","supertest-session>supertest>superagent>qs"]}],"metadata":null,"vulnerable_versions":">=6.9.0 <6.9.7","module_name":"qs","severity":"high","github_advisory_id":"GHSA-hrpp-h998-j3pp","cves":["CVE-2022-24999"],"access":"public","patched_versions":">=6.9.7","cvss":{"score":7.5,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},"updated":"2022-12-06T14:32:47.000Z","recommendation":"Upgrade to version 6.9.7 or later","cwe":["CWE-1321"],"found_by":null,"deleted":null,"id":1085139,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-24999\n- https://github.com/ljharb/qs/pull/428\n- https://github.com/expressjs/express/releases/tag/4.17.3\n- https://github.com/n8tz/CVE-2022-24999\n- https://github.com/advisories/GHSA-hrpp-h998-j3pp","created":"2022-11-27T00:30:50.000Z","reported_by":null,"title":"qs vulnerable to Prototype Pollution","npm_advisory_id":null,"overview":"qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).","url":"https://github.com/advisories/GHSA-hrpp-h998-j3pp"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085062,"path":"express-nunjucks>nunjucks-async-loader>chokidar>anymatch>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.2.0","paths":["nunjucks>chokidar>braces>snapdragon>source-map-resolve>decode-uri-component","nunjucks>chokidar>readdirp>micromatch>snapdragon>source-map-resolve>decode-uri-component","nunjucks>chokidar>readdirp>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","express-nunjucks>nunjucks-async-loader>chokidar>anymatch>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","express-nunjucks>nunjucks-async-loader>chokidar>readdirp>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component"]}],"metadata":null,"vulnerable_versions":"<0.2.1","module_name":"decode-uri-component","severity":"low","github_advisory_id":"GHSA-w573-4hg7-7wgq","cves":["CVE-2022-38900"],"access":"public","patched_versions":">=0.2.1","cvss":{"score":0,"vectorString":null},"updated":"2022-12-01T21:56:00.000Z","recommendation":"Upgrade to version 0.2.1 or later","cwe":["CWE-20"],"found_by":null,"deleted":null,"id":1085062,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-38900\n- https://github.com/SamVerschueren/decode-uri-component/issues/5\n- https://github.com/sindresorhus/query-string/issues/345\n- https://github.com/SamVerschueren/decode-uri-component/commit/746ca5dcb6667c5d364e782d53c542830e4c10b9\n- https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.1\n- https://github.com/advisories/GHSA-w573-4hg7-7wgq","created":"2022-11-28T15:30:24.000Z","reported_by":null,"title":"decode-uri-component vulnerable to Denial of Service (DoS)","npm_advisory_id":null,"overview":"decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.","url":"https://github.com/advisories/GHSA-w573-4hg7-7wgq"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085062,"path":"express-nunjucks>nunjucks-async-loader>chokidar>readdirp>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.2.0","paths":["nunjucks>chokidar>braces>snapdragon>source-map-resolve>decode-uri-component","nunjucks>chokidar>readdirp>micromatch>snapdragon>source-map-resolve>decode-uri-component","nunjucks>chokidar>readdirp>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","express-nunjucks>nunjucks-async-loader>chokidar>anymatch>micromatch>braces>snapdragon>source-map-resolve>decode-uri-component","express-nunjucks>nunjucks-async-loader>chokidar>readdirp>micromatch>extglob>expand-brackets>snapdragon>source-map-resolve>decode-uri-component"]}],"metadata":null,"vulnerable_versions":"<0.2.1","module_name":"decode-uri-component","severity":"low","github_advisory_id":"GHSA-w573-4hg7-7wgq","cves":["CVE-2022-38900"],"access":"public","patched_versions":">=0.2.1","cvss":{"score":0,"vectorString":null},"updated":"2022-12-01T21:56:00.000Z","recommendation":"Upgrade to version 0.2.1 or later","cwe":["CWE-20"],"found_by":null,"deleted":null,"id":1085062,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-38900\n- https://github.com/SamVerschueren/decode-uri-component/issues/5\n- https://github.com/sindresorhus/query-string/issues/345\n- https://github.com/SamVerschueren/decode-uri-component/commit/746ca5dcb6667c5d364e782d53c542830e4c10b9\n- https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.1\n- https://github.com/advisories/GHSA-w573-4hg7-7wgq","created":"2022-11-28T15:30:24.000Z","reported_by":null,"title":"decode-uri-component vulnerable to Denial of Service (DoS)","npm_advisory_id":null,"overview":"decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.","url":"https://github.com/advisories/GHSA-w573-4hg7-7wgq"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085214,"path":"snyk","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"1.1035.0","paths":["snyk"]}],"metadata":null,"vulnerable_versions":"<1.1064.0","module_name":"snyk","severity":"moderate","github_advisory_id":"GHSA-4x6g-3cmx-w76r","cves":["CVE-2022-22984"],"access":"public","patched_versions":">=1.1064.0","cvss":{"score":6.3,"vectorString":"CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"},"updated":"2022-12-15T05:09:11.000Z","recommendation":"Upgrade to version 1.1064.0 or later","cwe":["CWE-77"],"found_by":null,"deleted":null,"id":1085214,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2022-22984\n- https://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a\n- https://github.com/snyk/snyk-cocoapods-plugin/commit/c73e049c5200772babde61c40aab57296bf91381\n- https://github.com/snyk/snyk-docker-plugin/commit/d730d7630691a61587b120bb11daaaf4b58a8357\n- https://github.com/snyk/snyk-gradle-plugin/commit/bb1c1c72a75e97723a76b14d2d73f70744ed5009\n- https://github.com/snyk/snyk-hex-plugin/commit/e8dd2a330b40d7fc0ab47e34413e80a0146d7ac3\n- https://github.com/snyk/snyk-mvn-plugin/commit/02cda9ba1ea36b00ead3f6ec2de0f97397ebec50\n- https://github.com/snyk/snyk-python-plugin/commit/8591abdd9236108ac3e30c70c09238d6bb6aabf4\n- https://github.com/snyk/snyk-sbt-plugin/commit/99c09eb12c9f8f2b237aea9627aab1ae3cab6437\n- https://security.snyk.io/vuln/SNYK-JS-SNYK-3038622\n- https://security.snyk.io/vuln/SNYK-JS-SNYKDOCKERPLUGIN-3039679\n- https://security.snyk.io/vuln/SNYK-JS-SNYKGRADLEPLUGIN-3038624\n- https://security.snyk.io/vuln/SNYK-JS-SNYKMVNPLUGIN-3038623\n- https://security.snyk.io/vuln/SNYK-JS-SNYKPYTHONPLUGIN-3039677\n- https://security.snyk.io/vuln/SNYK-JS-SNYKSBTPLUGIN-3038626\n- https://security.snyk.io/vuln/SNYK-JS-SNYKSNYKCOCOAPODSPLUGIN-3038625\n- https://security.snyk.io/vuln/SNYK-JS-SNYKSNYKHEXPLUGIN-3039680\n- https://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/\n- https://github.com/advisories/GHSA-4x6g-3cmx-w76r","created":"2022-11-30T15:30:27.000Z","reported_by":null,"title":"Snyk plugins vulnerable to Command Injection","npm_advisory_id":null,"overview":"The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.","url":"https://github.com/advisories/GHSA-4x6g-3cmx-w76r"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1085309,"path":"config>json5","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"1.0.1","paths":["config>json5"]}],"metadata":null,"vulnerable_versions":"<1.0.2","module_name":"json5","severity":"high","github_advisory_id":"GHSA-9c47-m6qq-7p4h","cves":["CVE-2022-46175"],"access":"public","patched_versions":">=1.0.2","cvss":{"score":7.1,"vectorString":"CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:L/A:H"},"updated":"2023-01-03T15:04:41.000Z","recommendation":"Upgrade to version 1.0.2 or later","cwe":["CWE-1321"],"found_by":null,"deleted":null,"id":1085309,"references":"- https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h\n- https://nvd.nist.gov/vuln/detail/CVE-2022-46175\n- https://github.com/json5/json5/issues/199\n- https://github.com/json5/json5/issues/295\n- https://github.com/json5/json5/pull/298\n- https://github.com/advisories/GHSA-9c47-m6qq-7p4h","created":"2022-12-29T01:51:03.000Z","reported_by":null,"title":"Prototype Pollution in JSON5 via Parse Method","npm_advisory_id":null,"overview":"The `parse` method of the JSON5 library before and including version `2.2.1` does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object.\n\nThis vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.\n\n## Impact\nThis vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.\n\n## Mitigation\nThis vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.\n\n## Details\nSuppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using `JSON5.parse`, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:\n\n```js\nconst JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) => {\n if (props.isAdmin) {\n console.log('Doing dangerous thing as admin.');\n } else {\n console.log('Doing dangerous thing as user.');\n\n }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) => {\n let searchKeyFound = false;\n Object.keys(obj).forEach((key) => {\n if (searchKeys.indexOf(key) > -1) {\n searchKeyFound = true;\n }\n });\n return searchKeyFound;\n};\n\nconst props = JSON5.parse('{\\\"foo\\\": \\\"bar\\\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n doSomethingDangerous(props); // \\\"Doing dangerous thing as user.\\\"\n} else {\n throw new Error('Forbidden...');\n}\n```\n\nIf an attacker attempts to set the `isAdmin` key, their request will be rejected:\n\n```js\nconst props = JSON5.parse('{\\\"foo\\\": \\\"bar\\\", \\\"isAdmin\\\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\ndoSomethingDangerous(props);\n} else {\n throw new Error('Forbidden...'); // Error: Forbidden...\n}\n```\n\nHowever, attackers can instead set the `__proto__` key to `{\\\"isAdmin\\\": true}`. `JSON5` will parse this key and will set the `isAdmin` key on the prototype of the returned object, allowing the attacker to bypass the security check and run their request as an admin:\n\n```js\nconst props = JSON5.parse('{\\\"foo\\\": \\\"bar\\\", \\\"__proto__\\\": {\\\"isAdmin\\\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n doSomethingDangerous(props); // \\\"Doing dangerous thing as admin.\\\"\n} else {\n throw new Error('Forbidden...');\n}\n```\n","url":"https://github.com/advisories/GHSA-9c47-m6qq-7p4h"}}}
